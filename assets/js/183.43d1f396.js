(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{506:function(v,_,t){"use strict";t.r(_);var d=t(4),r=Object(d.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"dockerfile"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[v._v("#")]),v._v(" Dockerfile")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("关键字")]),v._v(" "),_("th",[v._v("作用")]),v._v(" "),_("th",[v._v("备注")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("FROM")]),v._v(" "),_("td",[v._v("指定父镜像")]),v._v(" "),_("td",[v._v("指定dockerfile基于那个image构建")])]),v._v(" "),_("tr",[_("td",[v._v("MAINTAINER")]),v._v(" "),_("td",[v._v("作者信息")]),v._v(" "),_("td",[v._v("用来标明这个dockerfile谁写的")])]),v._v(" "),_("tr",[_("td",[v._v("LABEL")]),v._v(" "),_("td",[v._v("标签")]),v._v(" "),_("td",[v._v("用来标明dockerfile的标签 可以使用Label代替Maintainer 最终都是在docker image基本信息中可以查看")])]),v._v(" "),_("tr",[_("td",[v._v("RUN")]),v._v(" "),_("td",[v._v("执行命令")]),v._v(" "),_("td",[v._v('执行一段命令 默认是/bin/sh 格式: RUN command 或者 RUN ["command" , "param1","param2"]')])]),v._v(" "),_("tr",[_("td",[v._v("CMD")]),v._v(" "),_("td",[v._v("容器启动命令")]),v._v(" "),_("td",[v._v('提供启动容器时候的默认命令 和ENTRYPOINT配合使用.格式 CMD command param1 param2 或者 CMD ["command" , "param1","param2"]')])]),v._v(" "),_("tr",[_("td",[v._v("ENTRYPOINT")]),v._v(" "),_("td",[v._v("入口")]),v._v(" "),_("td",[v._v("一般在制作一些执行就关闭的容器中会使用")])]),v._v(" "),_("tr",[_("td",[v._v("COPY")]),v._v(" "),_("td",[v._v("复制文件")]),v._v(" "),_("td",[v._v("build的时候复制文件到image中")])]),v._v(" "),_("tr",[_("td",[v._v("ADD")]),v._v(" "),_("td",[v._v("添加文件")]),v._v(" "),_("td",[v._v("build的时候添加文件到image中 不仅仅局限于当前build上下文 可以来源于远程服务")])]),v._v(" "),_("tr",[_("td",[v._v("ENV")]),v._v(" "),_("td",[v._v("环境变量")]),v._v(" "),_("td",[v._v("指定build时候的环境变量 可以在启动的容器的时候 通过-e覆盖 格式ENV name=value")])]),v._v(" "),_("tr",[_("td",[v._v("ARG")]),v._v(" "),_("td",[v._v("构建参数")]),v._v(" "),_("td",[v._v("构建参数 只在构建的时候使用的参数 如果有ENV 那么ENV的相同名字的值始终覆盖arg的参数")])]),v._v(" "),_("tr",[_("td",[v._v("VOLUME")]),v._v(" "),_("td",[v._v("定义外部可以挂载的数据卷")]),v._v(" "),_("td",[v._v('指定build的image那些目录可以启动的时候挂载到文件系统中 启动容器的时候使用 -v 绑定 格式 VOLUME ["目录"]')])]),v._v(" "),_("tr",[_("td",[v._v("EXPOSE")]),v._v(" "),_("td",[v._v("暴露端口")]),v._v(" "),_("td",[v._v("定义容器运行的时候监听的端口 启动容器的使用-p来绑定暴露端口 格式: EXPOSE 8080 或者 EXPOSE 8080/udp")])]),v._v(" "),_("tr",[_("td",[v._v("WORKDIR")]),v._v(" "),_("td",[v._v("工作目录")]),v._v(" "),_("td",[v._v("指定容器内部的工作目录 如果没有创建则自动创建 如果指定/ 使用的是绝对地址 如果不是/开头那么是在上一条workdir的路径的相对路径")])]),v._v(" "),_("tr",[_("td",[v._v("USER")]),v._v(" "),_("td",[v._v("指定执行用户")]),v._v(" "),_("td",[v._v("指定build或者启动的时候 用户 在RUN CMD ENTRYPONT执行的时候的用户")])]),v._v(" "),_("tr",[_("td",[v._v("HEALTHCHECK")]),v._v(" "),_("td",[v._v("健康检查")]),v._v(" "),_("td",[v._v("指定监测当前容器的健康监测的命令 基本上没用 因为很多时候 应用本身有健康监测机制")])]),v._v(" "),_("tr",[_("td",[v._v("ONBUILD")]),v._v(" "),_("td",[v._v("触发器")]),v._v(" "),_("td",[v._v("当存在ONBUILD关键字的镜像作为基础镜像的时候 当执行FROM完成之后 会执行 ONBUILD的命令 但是不影响当前镜像 用处也不怎么大")])]),v._v(" "),_("tr",[_("td",[v._v("STOPSIGNAL")]),v._v(" "),_("td",[v._v("发送信号量到宿主机")]),v._v(" "),_("td",[v._v("该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出。")])]),v._v(" "),_("tr",[_("td",[v._v("SHELL")]),v._v(" "),_("td",[v._v("指定执行脚本的shell")]),v._v(" "),_("td",[v._v("指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell")])])])])])}),[],!1,null,null,null);_.default=r.exports}}]);